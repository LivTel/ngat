/* ACQUIRE.java */
/* FILE GENERATED BY makeamess - DO NOT EDIT */

/* 
    Copyright 2006, Astrophysics Research Institute, Liverpool John Moores University.

    This file is part of NGAT.

    NGAT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    NGAT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with NGAT; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/
package ngat.message.ISS_INST;

import ngat.message.base.*;

import java.util.*;
import java.io.*;
/**
 * This command causes the instrument to acquire an object which
 * is within its field of view.  It can do this either by
 * (a) moving elements within the instrument, or (b) moving the
 * telescope. 
 * <h2>Command Parameters:</h2>
 * <ul>
 * <li><b><i>int</i> acquisitionMode</b> What sort of acquisition to do, see ngat.phase2.TelescopeConfig#ACQUIRE_MODE_*
 *              One of ACQUIRE_MODE_NONE, ACQUIRE_MODE_BRIGHTEST, ACQUIRE_MODE_WCS.
 * <li><b><i>double</i> RA</b> assumed J2000, radians. The right ascension of the object to acquire.
 * <li><b><i>double</i> dec</b> assumed J2000, radians. The declination of the object to acquire.
 * <li><b><i>double</i> RARate</b> Tracking rate in RA assumed J2000, radians/sec.
 * <li><b><i>double</i> decRate</b> Tracking rate in dec assumed J2000, radians/sec.
 * <li><b><i>long</i> calculationTime</b> Time at which the coordinates and rates were calculated.
 * <li><b><i>double</i> moving</b> True if the target is moving.
 * <li><b><i>int</i> xPixel</b> (pixels) The x pixel position to place the specified RA/Dec on acquisition instrument.
 * <li><b><i>int</i> yPixel</b> (pixels) The y pixel position to place the specified RA/Dec on acquisition instrument.
 * </ul>
 * <h2>Done Parameters:</h2>
 *  None
 * @see ISS_TO_INST
 */

public class ACQUIRE extends ISS_TO_INST implements Serializable
{

/* CONSTANTS */
	/**
	 * Revision Control System id string, showing the version of the Class.
	 */
	public final static String RCSID = new String("$Id$");

/* ATTRIBUTES */
	/**
	 * Attribute acquisitionMode of type int.
	 */
	private int acquisitionMode;
	/**
	 * Attribute RA of type double.
	 */
	private double RA;
	/**
	 * Attribute dec of type double.
	 */
	private double dec;
	/**
	 * Attribute RARate of type double.
	 */
	private double RARate;
	/**
	 * Attribute decRate of type double.
	 */
	private double decRate;
	/**
	 * Attribute calculationTime of type long.
	 */
	private long calculationTime;
	/**
	 * Attribute moving of type boolean.
	 */
	private boolean moving;
	/**
	 * Attribute xPixel of type int.
	 */
	private int xPixel;
	/**
	 * Attribute yPixel of type int.
	 */
	private int yPixel;

/* ATTRIBUTE ACCESSORS */
	/**
	 * Method to set acquisitionMode.
	 * @param in The value to set, of type int.
	 */
	public void setAcquisitionMode(int in)
	{
		this.acquisitionMode=in;
	}

	/**
	 * Method to get acquisitionMode.
	 * @return The method returns the attribute acquisitionMode.
	 */
	public int getAcquisitionMode()
	{
		return this.acquisitionMode;
	}

	/**
	 * Method to set RA.
	 * @param in The value to set, of type double.
	 */
	public void setRA(double in)
	{
		this.RA=in;
	}

	/**
	 * Method to get RA.
	 * @return The method returns the attribute RA.
	 */
	public double getRA()
	{
		return this.RA;
	}

	/**
	 * Method to set dec.
	 * @param in The value to set, of type double.
	 */
	public void setDec(double in)
	{
		this.dec=in;
	}

	/**
	 * Method to get dec.
	 * @return The method returns the attribute dec.
	 */
	public double getDec()
	{
		return this.dec;
	}

	/**
	 * Method to set RARate.
	 * @param in The value to set, of type double.
	 */
	public void setRARate(double in)
	{
		this.RARate=in;
	}

	/**
	 * Method to get RARate.
	 * @return The method returns the attribute RARate.
	 */
	public double getRARate()
	{
		return this.RARate;
	}

	/**
	 * Method to set decRate.
	 * @param in The value to set, of type double.
	 */
	public void setDecRate(double in)
	{
		this.decRate=in;
	}

	/**
	 * Method to get decRate.
	 * @return The method returns the attribute decRate.
	 */
	public double getDecRate()
	{
		return this.decRate;
	}

	/**
	 * Method to set calculationTime.
	 * @param in The value to set, of type long.
	 */
	public void setCalculationTime(long in)
	{
		this.calculationTime=in;
	}

	/**
	 * Method to get calculationTime.
	 * @return The method returns the attribute calculationTime.
	 */
	public long getCalculationTime()
	{
		return this.calculationTime;
	}

	/**
	 * Method to set moving.
	 * @param in The value to set, of type boolean.
	 */
	public void setMoving(boolean in)
	{
		this.moving=in;
	}

	/**
	 * Method to get moving.
	 * @return The method returns the attribute moving.
	 */
	public boolean getMoving()
	{
		return this.moving;
	}

	/**
	 * Method to set xPixel.
	 * @param in The value to set, of type int.
	 */
	public void setXPixel(int in)
	{
		this.xPixel=in;
	}

	/**
	 * Method to get xPixel.
	 * @return The method returns the attribute xPixel.
	 */
	public int getXPixel()
	{
		return this.xPixel;
	}

	/**
	 * Method to set yPixel.
	 * @param in The value to set, of type int.
	 */
	public void setYPixel(int in)
	{
		this.yPixel=in;
	}

	/**
	 * Method to get yPixel.
	 * @return The method returns the attribute yPixel.
	 */
	public int getYPixel()
	{
		return this.yPixel;
	}


/* CONSTRUCTOR */
	/**
	 * Default constructor for ACQUIRE.
	 * @param id The message id.
	 */
	public ACQUIRE(String id)
	{
		super(id);
	}
}
