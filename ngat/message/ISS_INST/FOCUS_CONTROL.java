/* FOCUS_CONTROL.java */
/* FILE GENERATED BY makeamess - DO NOT EDIT */

/* 
    Copyright 2006, Astrophysics Research Institute, Liverpool John Moores University.

    This file is part of NGAT.

    NGAT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    NGAT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with NGAT; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/
package ngat.message.ISS_INST;

import ngat.message.base.*;

import java.util.*;
import java.io.*;
/**
 * This command tells the ISS which instrument has control of the telescope focus.
 * This affects only shared focus instruments (IO:O, IO:I and THOR), as other instrument's
 * light path comes off the science fold, so they are the only instrument on the light path,
 * and therefore implicitly have control.
 * This command is not issued during robotic observations, as the RCS passes on any
 * FOCUS_CONTROL elements in the sequence to the ISS internally. This command is for use by
 * the Beam Steering System GUI, for using IO:O, IO:I and THOR manually.
 */

public class FOCUS_CONTROL extends INST_TO_ISS implements Serializable
{

/* CONSTANTS */
	/**
	 * Revision Control System id string, showing the version of the Class.
	 */
	public final static String RCSID = new String("$Id$");

/* ATTRIBUTES */
	/**
	 * Attribute instrumentName of type java.lang.String.
	 */
	private java.lang.String instrumentName;

/* ATTRIBUTE ACCESSORS */
	/**
	 * Method to set instrumentName.
	 * @param in The value to set, of type java.lang.String.
	 */
	public void setInstrumentName(java.lang.String in)
	{
		this.instrumentName=in;
	}

	/**
	 * Method to get instrumentName.
	 * @return The method returns the attribute instrumentName.
	 */
	public java.lang.String getInstrumentName()
	{
		return this.instrumentName;
	}


/* CONSTRUCTOR */
	/**
	 * Default constructor for FOCUS_CONTROL.
	 * @param id The message id.
	 */
	public FOCUS_CONTROL(String id)
	{
		super(id);
	}
}
