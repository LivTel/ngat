/* OFFSET_TT_RA_DEC.java */
/* FILE GENERATED BY makeamess - DO NOT EDIT */

/* 
    Copyright 2006, Astrophysics Research Institute, Liverpool John Moores University.

    This file is part of NGAT.

    NGAT is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    NGAT is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with NGAT; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

*/
package ngat.message.RCS_BSS;

import ngat.message.base.*;

import java.util.*;
import java.io.*;
/**
 * On receiving this command the BSS will issue an absolute ra/dec offset
 * to the tiptilt control mechanism software.
 * <h2>Command Parameters:</h2>
 * <ul>
 * <li><b><i>String</i> instrumentName</b> Inherited from OFFSET_TT.
 * <li><b><i>int </i> tiptiltId</b> Inherited from OFFSET_TT.
 * <li><b><i>double</i> rotSkyPA</b> The rotator sky angle, with the instrument -> telescope offset already applied.
 * <li><b><i>double</i> ra</b> The Right Ascension the telescope is pointing at when the offset is applied.
 *                             A double containing the RA in radians.
 * <li><b><i>double</i> dec</b> The Declination the telescope is pointing at when the offset is applied.
 *                             A double containing the Declination in radians.
 * <li><b><i>float</i> raOffset</b> The absolute offset to move the tiptilt to in arcseconds.
 * <li><b><i>float</i> decOffset</b> The absolute offset to move the tiptilt to in arcseconds.
 * </ul>
 * <h2>Done Parameters:</h2>
 * None
 * @see ngat.message.RCS_BSS.OFFSET_TT
 */

public class OFFSET_TT_RA_DEC extends OFFSET_TT implements Serializable
{

/* CONSTANTS */
	/**
	 * Revision Control System id string, showing the version of the Class.
	 */
	public final static String RCSID = new String("$Id: OFFSET_TT_RA_DEC.java,v 1.1 2013-07-01 09:26:43 cjm Exp $");

/* ATTRIBUTES */
	/**
	 * Attribute rotSkyPA of type double.
	 */
	private double rotSkyPA;
	/**
	 * Attribute ra of type double.
	 */
	private double ra;
	/**
	 * Attribute dec of type double.
	 */
	private double dec;
	/**
	 * Attribute raOffset of type float.
	 */
	private float raOffset;
	/**
	 * Attribute decOffset of type float.
	 */
	private float decOffset;

/* ATTRIBUTE ACCESSORS */
	/**
	 * Method to set rotSkyPA.
	 * @param in The value to set, of type double.
	 */
	public void setRotSkyPA(double in)
	{
		this.rotSkyPA=in;
	}

	/**
	 * Method to get rotSkyPA.
	 * @return The method returns the attribute rotSkyPA.
	 */
	public double getRotSkyPA()
	{
		return this.rotSkyPA;
	}

	/**
	 * Method to set ra.
	 * @param in The value to set, of type double.
	 */
	public void setRa(double in)
	{
		this.ra=in;
	}

	/**
	 * Method to get ra.
	 * @return The method returns the attribute ra.
	 */
	public double getRa()
	{
		return this.ra;
	}

	/**
	 * Method to set dec.
	 * @param in The value to set, of type double.
	 */
	public void setDec(double in)
	{
		this.dec=in;
	}

	/**
	 * Method to get dec.
	 * @return The method returns the attribute dec.
	 */
	public double getDec()
	{
		return this.dec;
	}

	/**
	 * Method to set raOffset.
	 * @param in The value to set, of type float.
	 */
	public void setRaOffset(float in)
	{
		this.raOffset=in;
	}

	/**
	 * Method to get raOffset.
	 * @return The method returns the attribute raOffset.
	 */
	public float getRaOffset()
	{
		return this.raOffset;
	}

	/**
	 * Method to set decOffset.
	 * @param in The value to set, of type float.
	 */
	public void setDecOffset(float in)
	{
		this.decOffset=in;
	}

	/**
	 * Method to get decOffset.
	 * @return The method returns the attribute decOffset.
	 */
	public float getDecOffset()
	{
		return this.decOffset;
	}


/* CONSTRUCTOR */
	/**
	 * Default constructor for OFFSET_TT_RA_DEC.
	 * @param id The message id.
	 */
	public OFFSET_TT_RA_DEC(String id)
	{
		super(id);
	}
}
