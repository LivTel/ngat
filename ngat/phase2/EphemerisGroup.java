package ngat.phase2;
import ngat.phase2.nonpersist.*;

import com.odi.*;
import com.odi.util.*;
import java.lang.reflect.*;
import java.util.*;
import java.io.*;


// Generated by O3J 


public class EphemerisGroup extends Group implements Serializable {

     // Variables.



     /**  date/time of the first observation period. */
     protected long start;


     /**  length of the phase period. */
     protected long period;


     /**  specific phase to carry out observations. */
     protected float phase;


     /**  record of last successfully observed period number. */
     protected int lastPeriod;

     // Constructor.

     public EphemerisGroup() {this("untitled");}

     public EphemerisGroup(String name) {
          super(name);
     }

     // Accessors.



     /** Sets the  date/time of the first observation period .*/
     public void setStart(long in) { this.start = in;}


     /** Returns the  date/time of the first observation period. */
     public long getStart() { return start;}


     /** Sets the  length of the phase period .*/
     public void setPeriod(long in) { this.period = in;}


     /** Returns the  length of the phase period. */
     public long getPeriod() { return period;}


     /** Sets the  specific phase to carry out observations .*/
     public void setPhase(float in) { this.phase = in;}


     /** Returns the  specific phase to carry out observations. */
     public float getPhase() { return phase;}


     /** Sets the  record of last successfully observed period number .*/
     public void setLastPeriod(int in) { this.lastPeriod = in;}


     /** Returns the  record of last successfully observed period number. */
     public int getLastPeriod() { return lastPeriod;}


     // Descendant Mutators.

     
     // NP -> P Translator.

     public EphemerisGroup(NPEphemerisGroup npEphemerisGroup) {
          super(npEphemerisGroup);
          Iterator it;
          start = npEphemerisGroup.getStart();
          period = npEphemerisGroup.getPeriod();
          phase = npEphemerisGroup.getPhase();
          lastPeriod = npEphemerisGroup.getLastPeriod();
          
          // Recursively call Daughter Translators.

     } // end (NP -> P Translator).
     
     // P -> NP Translator.

     public void stuff(NPEphemerisGroup npEphemerisGroup) {
          super.stuff(npEphemerisGroup);
          Iterator it;
          npEphemerisGroup.setStart(getStart());
          npEphemerisGroup.setPeriod(getPeriod());
          npEphemerisGroup.setPhase(getPhase());
          npEphemerisGroup.setLastPeriod(getLastPeriod());
     } // end (P -> NP Translator).
     
     // P -> NP Translator.

     public NPDBObject makeNP() {
          NPEphemerisGroup npEphemerisGroup = new NPEphemerisGroup();
          stuff(npEphemerisGroup);
          return npEphemerisGroup;
     } // end (makeNp).
     // handcoded. Insert in O2J generated EphemerisGroup.java
     
     public ScheduleDescriptor schedule() { return null;}


} // end class def [EphemerisGroup].
