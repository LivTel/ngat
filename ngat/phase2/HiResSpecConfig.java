package ngat.phase2;
import ngat.phase2.nonpersist.*;

import com.odi.*;
import com.odi.util.*;
import java.lang.reflect.*;
import java.util.*;
import java.io.*;


// Generated by O3J 


public class HiResSpecConfig extends SpecConfig implements Serializable {

     // Variables.



     /**  position of the grating if applicable. */
     protected int gratePosn;


     /**  determines if arc should be done before exposure. */
     protected boolean arcBefore;


     /**  determines if arc should be done after exposure. */
     protected boolean arcAfter;

     // Constructor.

     public HiResSpecConfig() {this("untitled");}

     public HiResSpecConfig(String name) {
          super(name);
     }

     // Accessors.



     /** Sets the  position of the grating if applicable .*/
     public void setGratePosn(int in) { this.gratePosn = in;}


     /** Returns the  position of the grating if applicable. */
     public int getGratePosn() { return gratePosn;}


     /** Sets the  determines if arc should be done before exposure .*/
     public void setArcBefore(boolean in) { this.arcBefore = in;}


     /** True if  determines if arc should be done before exposure. */
     public boolean isArcBefore() { return arcBefore;}


     /** Sets the  determines if arc should be done after exposure .*/
     public void setArcAfter(boolean in) { this.arcAfter = in;}


     /** True if  determines if arc should be done after exposure. */
     public boolean isArcAfter() { return arcAfter;}


     // Descendant Mutators.

     
     // NP -> P Translator.

     public HiResSpecConfig(NPHiResSpecConfig npHiResSpecConfig) {
          super(npHiResSpecConfig);
          Iterator it;
          gratePosn = npHiResSpecConfig.getGratePosn();
          arcBefore = npHiResSpecConfig.isArcBefore();
          arcAfter = npHiResSpecConfig.isArcAfter();
          
          // Recursively call Daughter Translators.

     } // end (NP -> P Translator).
     
     // P -> NP Translator.

     public void stuff(NPHiResSpecConfig npHiResSpecConfig) {
          super.stuff(npHiResSpecConfig);
          Iterator it;
          npHiResSpecConfig.setGratePosn(getGratePosn());
          npHiResSpecConfig.setArcBefore(isArcBefore());
          npHiResSpecConfig.setArcAfter(isArcAfter());
     } // end (P -> NP Translator).
     
     // P -> NP Translator.

     public NPDBObject makeNP() {
          NPHiResSpecConfig npHiResSpecConfig = new NPHiResSpecConfig();
          stuff(npHiResSpecConfig);
          return npHiResSpecConfig;
     } // end (makeNp).


} // end class def [HiResSpecConfig].
