package ngat.phase2;
import ngat.phase2.nonpersist.*;

import com.odi.*;
import com.odi.util.*;
import java.lang.reflect.*;
import java.util.*;
import java.io.*;


// Generated by O3J 


public class SpecConfig extends InstrumentConfig implements Serializable {

     // Variables.



     /** no comment. */
     protected boolean redArmHiRes;


     /** no comment. */
     protected boolean blueArmHiRes;

     // Constructor.

     public SpecConfig() {this("untitled");}

     public SpecConfig(String name) {
          super(name);
     }

     // Accessors.



     /** Sets the no comment .*/
     public void setRedArmHiRes(boolean in) { this.redArmHiRes = in;}


     /** True if no comment. */
     public boolean isRedArmHiRes() { return redArmHiRes;}


     /** Sets the no comment .*/
     public void setBlueArmHiRes(boolean in) { this.blueArmHiRes = in;}


     /** True if no comment. */
     public boolean isBlueArmHiRes() { return blueArmHiRes;}


     // Descendant Mutators.

     
     // NP -> P Translator.

     public SpecConfig(NPSpecConfig npSpecConfig) {
          super(npSpecConfig);
          Iterator it;
          redArmHiRes = npSpecConfig.isRedArmHiRes();
          blueArmHiRes = npSpecConfig.isBlueArmHiRes();
          
          // Recursively call Daughter Translators.

     } // end (NP -> P Translator).
     
     // P -> NP Translator.

     public void stuff(NPSpecConfig npSpecConfig) {
          super.stuff(npSpecConfig);
          Iterator it;
          npSpecConfig.setRedArmHiRes(isRedArmHiRes());
          npSpecConfig.setBlueArmHiRes(isBlueArmHiRes());
     } // end (P -> NP Translator).
     
     // P -> NP Translator.

     public NPDBObject makeNP() {
          NPSpecConfig npSpecConfig = new NPSpecConfig();
          stuff(npSpecConfig);
          return npSpecConfig;
     } // end (makeNp).


} // end class def [SpecConfig].
