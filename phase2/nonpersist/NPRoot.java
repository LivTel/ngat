package ngat.phase2.nonpersist;

import ngat.phase2.*;
import java.util.*;
import java.io.*;


// Generated by O3J 


public class NPRoot extends NPDBObject implements Serializable, Cloneable{

     // Variables.

     protected HashMap npTags;

     // Constructor.

     public NPRoot() {this("untitled");}

     public NPRoot(String name) {
          super(name);
          npTags = new HashMap();
     }

     // Accessors.



     // Descendant Mutators.


     // NPTag Methods.

     public void addNPTag(NPTag npTag) {
          npTags.put(npTag.getName(), npTag);
          npTag.setPath(getPath() + "/" + getName());
     }

     public void deleteNPTag(NPTag npTag) {
          npTags.remove(npTag.getName());
     }

     public void removeAllNPTags() {
          npTags.clear();
     }

     public Iterator listAllNPTags() {
          return npTags.values().iterator();
     }

     public NPTag findNPTag(String name) {
          if (npTags.containsKey(name)) return ((NPTag)npTags.get(name));
          return null;
     }

     public HashMap getNPTags() { return npTags;}
     
    /** Formatted Text Output to PrintStream.*/
    public void write(PrintStream out, int level) {
	super.write(out, level);
	Iterator it;
	it = listAllNPTags();
	while (it.hasNext()) {
	    ((NPTag)it.next()).write(out,level+1);
	}
    } // end (write).

    /** Formatted Text Output as XML.*/
    public void writeXml(PrintStream out, int level) {
	super.writeXml(out, level);
	out.println(tab(level)+"</Root>");
    } // end (write).

    /** NPClone Constructor.*/
    public NPDBObject copy() {
	try {
	    return (NPRoot)clone();
	} catch (CloneNotSupportedException ce) {return null;}
    } // end (copy).


} // end class def [Root].
